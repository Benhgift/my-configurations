#!/bin/zsh

# Aliases
function gs() { git status }
function gcbn() { git rev-parse --abbrev-ref HEAD }

# Functions
function gcb() {
  git pull;
  git checkout -b "$1";
  msg "Creating branch: $1"
  git push -u origin "$1";
  git push --set-upstream origin "$1";
  msg "Pending changes?";
  gs;
}
function gc() {
  # git add . -A;
  msg "Committing to branch: ${$(gcbn)}";
  # git commit -m "$1";
  gs;
}
function gp() {
  msg "Pull down all the code and all the tags!";
  git pull;
  git pull --tags;
  gs;
}
function gpo() {
  msg "Pushing all the things to origin!";
  git push;
  gs;
}
function grpo() {
  msg "Purge dead branches!";
  git pull;
  git remote prune origin;
  git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d;
}
function gct() {
  msg "Creating tag: $1"
  git tag "$1";
  git push origin --tags;
  msg "Current tags!";
  git tag -l;
  gs;
}
function gck() {
  msg "Checking out branch: $1"
  git checkout "$1";
  git pull;
  gs;
}










alias gd="git diff"
alias gt="git tag"
alias gtl="git tag -l"
alias grso="git remote show origin"
alias gcf="git config --list"
alias gclone="sh $HOME/.myconfigurations/software/git/shell-scripts/clone.sh"
alias gpot="git push origin --tags"
alias gpt="git push --tags"
alias gl="git log --show-notes"
alias glt="git log --graph --oneline --all"
alias gltp="git log --graph --all --decorate"
alias gfi="git flow init"
alias gf="git flow"
alias gfh="git flow help"


# function gcl() {
#   git add . -A;
#   git commit -m "$*";
#   git status;
# }



function gm() {
  git pull;
  git merge "$*" --no-ff;
  git push;
  git status;
}

function gmdb() {
  git pull
  git merge "$*" --no-ff;
  git push;
  git push --delete origin "$*";
  git remote prune origin
  git branch -D "$*";
  git status;
}

function gdbf() {
  git pull
  git push --delete origin "$*";
  git remote prune origin
  git branch -D "$*";
  git status;
}

function gmt() {
  git pull;
  git merge "$*" -X theirs;
  git push;
  git status;
}

function gdb() {
  git branch -D "$*";
  git remote prune origin
  git status;
}

function gdbf() {
  git branch -D "$*";
  git push --delete origin "$*";
  git remote prune origin
  git status;
}

function gpsvn() {
  find . -name .svn  -type d -print0 |xargs -0 rm -rf
}

function gk() {touch .keep}

function gkf() {
  mkdir "$*";
  touch "$*/.keep";
}

function gcmd() {
  touch readme.md;
  open readme.md;
}

function gdt() {
  git tag -d "$*";
  git push origin :refs/tags/"$*";
}

function gfcb() {
  param1=$1:l
  param2=$2:l
  echo "git subcommand:" $param1
  echo "branch name:" $param2
  spacer
  git flow $param1 start $param2
  git flow $param1 publish $param2
}

function gfmb() {
  param1=$1:l
  param2=$2:l
  echo "git subcommand:" $param1
  echo "branch name:" $param2
  spacer
  git flow $param1 finish $param2
}
